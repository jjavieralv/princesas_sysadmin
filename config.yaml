# crear Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: pruebitaj 
---
# Crear el service account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pruebitaj 
  namespace: pruebitaj
---
# Crear Secret para el certificado tls
apiVersion: v1
kind: Secret
data:
  tls.crt: YWRtaW4=
  tls.key: MWYyZDFlMmU2N2Rm
metadata:
  name: pruebitaj-tls
  namespace: default
type: kubernetes.io/tls
---
# Crear servicio para tener acceso a los pods
kind: Service
apiVersion: v1
metadata:
  name: pruebitaj-svc
spec:
  selector:
    app: pruebitaj-app
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
---
# Crear ingress para enrutado y aplicacion de certificado
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: pruebitaj-tls-ingress
spec:
  tls:
  - hosts:
    - pruebitaj.coredumped.es
    secretName: pruebitaj-tls
  rules:
    - host: pruebitaj.coredumped.es
      http:
        paths:
        - path: /
          backend:
            serviceName: pruebitaj-svc
            servicePort: 80
---
# Creacion del pod usando la imagen creada
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pruebitaj-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pruebitaj-app
  template:
    metadata:
      labels:
        app: pruebitaj-app
    spec:
      containers:
      - name: pruebitaj-pod
        image: gcr.io/google-samples/hello-app:1.0
        imagePullPolicy: IfNotPresent
        #env        
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "100Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "1000m"